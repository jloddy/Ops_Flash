/* DAILY FLASH REPORT
METRICS:
1) Accounts Worked
2) Promises
3) Promise Kept%
4) Dollars Collected by Agent Average
5) Average Payment Size
6) Collector liquidation
7) Post Dates
8) SIF/PIF
9) Total Outbound Calls
10) Total Dialer Calls
11) Connect Rate
12) RPC Rate
13) Promise Rate
14) Queue Penetration
15) Queue Saturation
16) DPMO Failed QA
17) Contingency Fee Earned
18) Owned Portfolio Liquidation Pct
*/

%LET LIBNAME = SRC;

%MACRO LIBNAME(NAME=);

%IF "&SYSUSERID" = "cna0" %THEN %DO;
	LIBNAME &NAME '/u01/app/cu/prd/sas/archive/Risk/Data/Cochran/Ad-Hoc/SAS Files/';
%END;

%ELSE %DO;
	LIBNAME &NAME ODBC  
		DSN='BEAM_64' 
		SCHEMA=dbo 
		USER="emergentuser"
		PASSWORD="s8vAqlD1THEXQAl3T9mIyk6pJVa7kouMIiPygn3o+5I=";
%END;
%MEND;

%LIBNAME(NAME=&LIBNAME)

DATA DATE_SOURCE;
START_DT = '01JAN2016'D;
INCREMENT = 0;
	DO I = START_DT TO TODAY()-1;
		DATE = INTNX('DAY',START_DT,INCREMENT,'B');
		INCREMENT = INCREMENT+1;
		OUTPUT;
	END;

	FORMAT DATE MMDDYY10.;
	KEEP DATE;
RUN;

PROC SQL;
	CREATE TABLE ACCTS_WORKED AS
		SELECT CN.*
			  ,CPR.DESCRIPTION
			  ,SD.ACCOUNTID
		FROM &LIBNAME..CALLNOTE CN
	LEFT JOIN &LIBNAME..CALLPRIMARYRESULT CPR
		ON(CN.PRIMARYRESULTID=CPR.CALLPRIMARYRESULTID)
	LEFT JOIN &LIBNAME..SERVICERDATA SD
		ON(CN.SERVICERDATAID=SD.SERVICERDATAID)
;
QUIT;

PROC SQL;
	CREATE TABLE PORTFOLIO AS
		SELECT CN.*
			  ,A.PORTFOLIOOWNER AS PORTFOLIO
			  ,DATEPART(DATE) AS DATEPART FORMAT = MMDDYY10.
		FROM ACCTS_WORKED CN
	LEFT JOIN &LIBNAME..ACCOUNT A
		ON(CN.ACCOUNTID=A.ACCOUNTID)
	WHERE PRIMARYRESULTID NOT IN(1,4,14,15,16,17,18,19,20,21,22,23)
;
QUIT;

/* OUTBOUND DIALER METRICS */
PROC SQL;
	CREATE TABLE ACCOUNTS_CALLED_PER_DAY AS
		SELECT PORTFOLIO
			  ,DATEPART AS DATE
			  ,COUNT(DISTINCT ACCOUNTID) AS ACCTS_ON_DIALER
			  ,COUNT(*) AS TOTAL_DIALER_CALLS
		FROM PORTFOLIO
	GROUP BY 1,2;
QUIT;

/* PAYMENTS */
PROC SQL;
	CREATE TABLE PAYMENTS AS
		SELECT SERVICERDATAID
			  ,DATE
			  ,AMOUNT
			  ,PH.PAYMENTHISTORYTYPEID
			  ,ISPAYMENT
			  ,TEXT
		FROM &LIBNAME..PAYMENTHISTORY PH
	LEFT JOIN &LIBNAME..PAYMENTHISTORYTYPE PHT
		ON(PH.PAYMENTHISTORYTYPEID=PHT.PAYMENTHISTORYTYPEID)
	WHERE ISPAYMENT = 1
	ORDER BY SERVICERDATAID
;
QUIT;

/* NSF PAYMENTS TO BE REVERSED */
PROC SQL; 
	CREATE TABLE NSF AS
		SELECT SERVICERDATAID
			  ,DATE
			  ,AMOUNT
			  ,ISPAYMENT
			  ,NSFPAYMENTHISTORYID
		FROM &LIBNAME..PAYMENTHISTORY PH
	WHERE PH.NSFPAYMENTHISTORYID ^= .
		  AND PH.ISPAYMENT = 1
;
QUIT;

PROC SQL;
	CREATE TABLE PAYMENTS_WITHOUT_NSF AS
		SELECT PH.SERVICERDATAID
			  ,PH.PAYMENTHISTORYID
			  ,PH.NSFPAYMENTHISTORYID
			  ,PH.DATE
			  ,PH.AMOUNT
			  ,PH.ISPAYMENT
		FROM &LIBNAME..PAYMENTHISTORY PH
	LEFT JOIN NSF NSF
		ON(PH.PAYMENTHISTORYID=NSF.NSFPAYMENTHISTORYID)
	WHERE PH.NSFPAYMENTHISTORYID = . AND 
		  NSF.NSFPAYMENTHISTORYID = . AND
		  PH.ISPAYMENT = 1
;