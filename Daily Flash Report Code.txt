/* DAILY FLASH REPORT
METRICS:
1) Accounts Worked - DONE
2) Promises - DONE
3) Promise Kept% - DONE
4) Dollars Collected by Agent Average - DONE
5) Average Payment Size - DONE
6) Collector Liquidation
7) Post Dates - DONE
8) SIF/PIF - DONE
9) Total Outbound Calls - DONE
10) Total Dialer Calls - DONE
11) Connect Rate - DONE
12) RPC Rate - DONE
13) Promise Rate - DONE
14) Queue Penetration - DONE
15) Queue Saturation - DONE
16) Contingency Fee Earned - DONE
17) Owned Portfolio Liquidation Pct
*/

%LET LIBNAME = SRC;

%MACRO LIBNAME(NAME=);

%IF "&SYSUSERID" = "cna0" %THEN %DO;
	LIBNAME &NAME '/u01/app/cu/prd/sas/archive/Risk/Data/Cochran/Ad-Hoc/SAS Files/';
%END;

%ELSE %DO;
	LIBNAME &NAME ODBC  
		DSN='BEAM_64' 
		SCHEMA=dbo 
		USER="emergentuser"
		PASSWORD="s8vAqlD1THEXQAl3T9mIyk6pJVa7kouMIiPygn3o+5I=";
%END;
%MEND;

%LIBNAME(NAME=&LIBNAME)

DATA DATE_SOURCE;
START_DT = '01JAN2016'D;
INCREMENT = 0;
	DO I = START_DT TO TODAY()-1;
		DATE = INTNX('DAY',START_DT,INCREMENT,'B');
		INCREMENT = INCREMENT+1;
		OUTPUT;
	END;

	FORMAT DATE MMDDYY10.;
	KEEP DATE;
RUN;

PROC SQL;
	CREATE TABLE PORTFOLIO_GROUPS AS
		SELECT DISTINCT PORTFOLIOOWNER
			  ,CCPLACEMENTINBEAM
		FROM &LIBNAME..ACCOUNT
;
QUIT;

DATA BLANK_APPEND;
	LENGTH PORTFOLIOOWNER CCPLACEMENTINBEAM $100.;
	PORTFOLIOOWNER = '';
	CCPLACEMENTINBEAM = '';
RUN;

PROC APPEND BASE=PORTFOLIO_GROUPS DATA=BLANK_APPEND;
RUN;

PROC SQL;
	CREATE TABLE UNIQUE_DIMENSIONS AS
		SELECT DISTINCT P.PORTFOLIOOWNER AS PORTFOLIO
			  ,CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,D.DATE
		FROM PORTFOLIO_GROUPS P
	CROSS JOIN DATE_SOURCE D
	WHERE WEEKDAY(D.DATE) ^= 1 /* NO CALLING ON SUNDAY */
	ORDER BY 3,2,1
;
QUIT;
			  
PROC SQL;
	CREATE TABLE ACCTS_WORKED AS
		SELECT CN.*
			  ,CPR.DESCRIPTION AS PRI_DESC
			  ,CSR.DESCRIPTION AS SEC_DESC
			  ,SD.ACCOUNTID
			  ,U.QUEUEID
			  ,CASE WHEN U.QUEUEID IN(90,91) THEN 'DIALER QUEUE'
			        WHEN U.QUEUEID = . THEN 'NO QUEUE' 
			   ELSE 'MANUAL QUEUE' END AS QUEUE_TYPE
		FROM &LIBNAME..CALLNOTE CN
	LEFT JOIN &LIBNAME..CALLPRIMARYRESULT CPR
		ON(CN.PRIMARYRESULTID=CPR.CALLPRIMARYRESULTID)
	LEFT JOIN &LIBNAME..CALLSECONDARYRESULT CSR
		ON(CN.SECONDARYRESULTID=CSR.CALLSECONDARYRESULTID)
	LEFT JOIN &LIBNAME..SERVICERDATA SD
		ON(CN.SERVICERDATAID=SD.SERVICERDATAID)
	LEFT JOIN &LIBNAME..USERS U
		ON(CN.USERID=U.USERID)
;
QUIT;

/* QUEUE SATURATION/PENETRATION DENOMINATOR */
PROC SQL;
	CREATE TABLE QUEUE_VOLUME AS
		SELECT ACCOUNTID
			  ,PORTFOLIOOWNER
/*			  ,CCPLACEMENTQUEUE*/
			  ,CCPLACEMENTINBEAM
			  ,DATEPART(CODATE) AS DATE FORMAT = MMDDYY10.
			  ,DOMAINID
			  ,CASE WHEN DOMAINID = 1 THEN 'ACTIVE'
			  	    WHEN DOMAINID = 2 THEN 'OUTSOURCED'
					WHEN DOMAINID = 3 THEN 'CLOSED'
				ELSE '' END AS DOMAINTYPE
			  ,DOMAINSTATUSID
			  ,CASE WHEN DOMAINSTATUSID = 1 THEN 'ACTIVE'
			  		WHEN DOMAINSTATUSID = 2 THEN 'PROMISE'
					WHEN DOMAINSTATUSID = 3 THEN 'PLAN'
					WHEN DOMAINSTATUSID = 4 THEN 'SETTLED'
					WHEN DOMAINSTATUSID = 5 THEN 'SOLD'
					WHEN DOMAINSTATUSID = 6 THEN 'RECALLED'
					WHEN DOMAINSTATUSID = 7 THEN 'PUT BACK'
					WHEN DOMAINSTATUSID = 8 THEN 'CLOSED'
					WHEN DOMAINSTATUSID = 9 THEN 'SIF'
					WHEN DOMAINSTATUSID = 10 THEN 'PIF'
				ELSE '' END AS DOMAINSTATUSTYPE
		FROM &LIBNAME..ACCOUNT
	WHERE CALCULATED DOMAINTYPE = 'ACTIVE'
;
QUIT;

PROC SQL;
	CREATE TABLE SIF_PIF AS	
		SELECT PORTFOLIOOWNER AS PORTFOLIO
			  ,CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,DATE
			  ,COUNT(ACCOUNTID) AS SIF_PIF
		FROM QUEUE_VOLUME
	WHERE DOMAINSTATUSTYPE IN('SIF','PIF')
;
QUIT;

PROC SQL;
	CREATE TABLE QUEUE_PENETRATION AS
		SELECT PORTFOLIOOWNER AS PORTFOLIO
			  ,CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,DATEPART(DATE) AS DATEPART FORMAT = MMDDYY10.
			  ,COUNT(A.ACCOUNTID) AS QUEUE_VOLUME
			  ,COUNT(DISTINCT AW.ACCOUNTID) AS WORKED
			  ,COALESCE(CALCULATED WORKED/CALCULATED QUEUE_VOLUME,0) AS QUEUE_PENETRATION FORMAT = PERCENT9.2
		FROM QUEUE_VOLUME A 
	LEFT JOIN ACCTS_WORKED AW
		ON(AW.ACCOUNTID=A.ACCOUNTID)
	WHERE PRIMARYRESULTID NOT IN (1,18,21,22)
	GROUP BY 1,2,3
;
QUIT;

PROC SQL;
	CREATE TABLE QUEUE_SATURATION AS
		SELECT PORTFOLIOOWNER AS PORTFOLIO
			  ,CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,DATEPART(DATE) AS DATEPART FORMAT = MMDDYY10.
			  ,COUNT(A.ACCOUNTID) AS QUEUE_VOLUME
			  ,COUNT(AW.ACCOUNTID) AS NUM_TIMES_WORKED
			  ,COALESCE(CALCULATED NUM_TIMES_WORKED/CALCULATED QUEUE_VOLUME,0) AS QUEUE_SATURATION FORMAT = PERCENT9.2
		FROM QUEUE_VOLUME A 
	LEFT JOIN ACCTS_WORKED AW
		ON(AW.ACCOUNTID=A.ACCOUNTID)
	WHERE PRIMARYRESULTID NOT IN (1,18,21,22)
	GROUP BY 1,2,3
;
QUIT;

/*PROC SQL;*/
/*	CREATE TABLE QUEUE_FINAL_BY_QUEUE AS*/
/*		SELECT T1.PORTFOLIO*/
/*			  ,T1.QUEUEID*/
/*			  ,T1.DATEPART*/
/*			  ,T1.ACCTS_IN_QUEUE*/
/*			  ,T2.WORKED*/
/*			  ,T3.NUM_TIMES_WORKED*/
/*			  ,COALESCE(T2.WORKED/T1.ACCTS_IN_QUEUE,0) AS QUEUE_PENETRATION FORMAT = PERCENT9.2*/
/*			  ,COALESCE(T3.NUM_TIMES_WORKED/T1.ACCTS_IN_QUEUE,0) AS QUEUE_SATURATION FORMAT = PERCENT9.2*/
/*		FROM QUEUE T1*/
/*	LEFT JOIN QUEUE_PENETRATION T2*/
/*		ON(T1.PORTFOLIO=T2.PORTFOLIO AND*/
/*		   T1.QUEUEID=T2.QUEUEID AND*/
/*		   T1.DATEPART=T2.DATEPART)*/
/*	LEFT JOIN QUEUE_SATURATION T3 */
/*		ON(T1.PORTFOLIO=T3.PORTFOLIO AND*/
/*		   T1.QUEUEID=T3.QUEUEID AND*/
/*		   T1.DATEPART=T3.DATEPART)*/
/*;*/
/*QUIT;	*/

/*PROC SQL;*/
/*	CREATE TABLE QUEUES_BY_DAY AS*/
/*		SELECT PORTFOLIO*/
/*			  ,DATEPART*/
/*			  ,AVG(QUEUE_PENETRATION) AS QUEUE_PENETRATION FORMAT = PERCENT9.2*/
/*			  ,AVG(QUEUE_SATURATION) AS QUEUE_SATURATION FORMAT = PERCENT9.2*/
/*		FROM QUEUE_FINAL_BY_QUEUE*/
/*	GROUP BY 1,2*/
/*;*/
/*QUIT;*/

PROC SQL;
	CREATE TABLE OUTBOUND_DIALER_CALLS AS
		SELECT CN.*
			  ,A.PORTFOLIOOWNER AS PORTFOLIO
			  ,A.CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,DATEPART(DATE) AS DATEPART FORMAT = MMDDYY10.
		FROM ACCTS_WORKED CN
	LEFT JOIN &LIBNAME..ACCOUNT A
		ON(CN.ACCOUNTID=A.ACCOUNTID)
	WHERE PRIMARYRESULTID NOT IN(1,4,14,15,16,17,18,19,20,21,22,23)
;
QUIT;

/* PTP */
PROC SQL;
	CREATE TABLE PTP AS
		SELECT DISTINCT SERVICERDATAID
		      ,PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART
			  ,ACCOUNTID
			  ,CASE WHEN SECONDARYRESULTID = 8 THEN "Y" ELSE "N" END AS PTP
		FROM OUTBOUND_DIALER_CALLS
;
QUIT;

PROC SQL;
	CREATE TABLE PTP_BY_DAY AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART AS DATE
			  ,SUM(CASE WHEN PTP = "Y" THEN 1 ELSE 0 END) AS PROMISES
/*			  ,COUNT(*) AS TOTAL_ACCTS_WORKED*/
/*			  ,CALCULATED PROMISES/CALCULATED TOTAL_ACCTS_WORKED AS PROMISE_RATE*/
		FROM PTP
	GROUP BY 1,2,3
;
QUIT;

/* OUTBOUND DIALER METRICS */
PROC SQL;
	CREATE TABLE ACCOUNTS_CALLED_PER_DAY AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART AS DATE
			  ,COUNT(DISTINCT ACCOUNTID) AS ACCOUNTS_WORKED
			  ,SUM(CASE WHEN USERID IN(126,127) THEN 1 ELSE 0 END) AS TOTAL_DIALER_CALLS
			  ,COUNT(*) AS TOTAL_OUTBOUND_CALLS
		FROM OUTBOUND_DIALER_CALLS
	GROUP BY 1,2,3;
QUIT;

/* 2, 3, 6, 11 ARE NOT CONNECTS */
PROC SQL;
	CREATE TABLE CONNECT_RATE AS
		SELECT *
			  ,CASE WHEN PRIMARYRESULTID NOT IN(2,3,6,11) THEN "Y" ELSE "N" END AS CONNECT
		FROM OUTBOUND_DIALER_CALLS
;
QUIT;

PROC SQL;
	CREATE TABLE CONNECTS_BY_DAY AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART AS DATE
			  ,SUM(CASE WHEN CONNECT = "Y" THEN 1 ELSE 0 END) AS CONNECTS
			  ,COUNT(*) AS TOTAL_OUTBOUND_CALLS
			  ,CALCULATED CONNECTS/CALCULATED TOTAL_OUTBOUND_CALLS AS CONNECT_RATE
		FROM CONNECT_RATE
	GROUP BY 1,2,3
;
QUIT;

PROC SQL;
	CREATE TABLE RPC_RATE AS
		SELECT *
			  ,CASE WHEN PRIMARYRESULTID IN(7,9) THEN "Y" ELSE "N" END AS RPC
		FROM OUTBOUND_DIALER_CALLS
;
QUIT;

PROC SQL;
	CREATE TABLE RPCS_BY_DAY AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART AS DATE
			  ,SUM(CASE WHEN RPC = "Y" THEN 1 ELSE 0 END) AS RPCS
			  ,COUNT(*) AS TOTAL_OUTBOUND_CALLS
			  ,CALCULATED RPCS/CALCULATED TOTAL_OUTBOUND_CALLS AS RPC_RATE
		FROM RPC_RATE
	GROUP BY 1,2,3
;
QUIT;

/* PAYMENTS */
PROC SQL;
	CREATE TABLE PAYMENTS AS
		SELECT SERVICERDATAID
			  ,DATE
			  ,AMOUNT
			  ,PH.PAYMENTHISTORYTYPEID
			  ,ISPAYMENT
			  ,TEXT
		FROM &LIBNAME..PAYMENTHISTORY PH
	LEFT JOIN &LIBNAME..PAYMENTHISTORYTYPE PHT
		ON(PH.PAYMENTHISTORYTYPEID=PHT.PAYMENTHISTORYTYPEID)
	WHERE ISPAYMENT = 1
	ORDER BY SERVICERDATAID
;
QUIT;

/* NSF PAYMENTS TO BE REVERSED */
PROC SQL; 
	CREATE TABLE NSF AS
		SELECT SERVICERDATAID
			  ,DATE
			  ,AMOUNT
			  ,ISPAYMENT
			  ,NSFPAYMENTHISTORYID
		FROM &LIBNAME..PAYMENTHISTORY PH
	WHERE PH.NSFPAYMENTHISTORYID ^= .
		  AND PH.ISPAYMENT = 1
;
QUIT;

PROC SQL;
	CREATE TABLE PAYMENTS_WITHOUT_NSF AS
		SELECT PH.SERVICERDATAID
			  ,A.PORTFOLIOOWNER AS PORTFOLIO
			  ,A.CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,PH.PAYMENTHISTORYID
			  ,PH.NSFPAYMENTHISTORYID
			  ,PH.CREDITUSER
			  ,PH.DATE
			  ,DATEPART(PH.DATE) AS DATEPART FORMAT = MMDDYY10.
/*			  ,INTNX('DAY',DATEPART(PH.DATE),3,'B') AS TXN_PLUS_PAD FORMAT = MMDDYY10.*/
/*			  ,INTNX('DAY',DATEPART(PH.DATE),-3,'B') AS TXN_MINUS_PAD FORMAT = MMDDYY10.*/
			  ,PH.AMOUNT
			  ,(FEERATE*.01)*PH.AMOUNT AS CONTINGENCYFEE FORMAT=DOLLAR15.2
			  ,PH.ISPAYMENT
		FROM &LIBNAME..PAYMENTHISTORY PH
	LEFT JOIN NSF NSF
		ON(PH.PAYMENTHISTORYID=NSF.NSFPAYMENTHISTORYID)
	LEFT JOIN &LIBNAME..SERVICERDATA SD
		ON(PH.SERVICERDATAID=SD.SERVICERDATAID)
	LEFT JOIN &LIBNAME..ACCOUNT A
		ON(SD.ACCOUNTID=A.ACCOUNTID)
	WHERE PH.NSFPAYMENTHISTORYID = . AND 
		  NSF.NSFPAYMENTHISTORYID = . AND
		  PH.ISPAYMENT = 1
;
QUIT;

PROC SQL;
	CREATE TABLE DOLL_COLLECTED AS 
		SELECT PORTFOLIOOWNER AS PORTFOLIO
			  ,CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,PWN.SERVICERDATAID
			  ,DATEPART
			  ,CREDITUSER
			  ,ACQBALANCE AS BALANCE_AT_ACQ
			  ,AMOUNT AS DOLL_COLLECTED
		FROM PAYMENTS_WITHOUT_NSF PWN
	LEFT JOIN &LIBNAME..SERVICERDATA SD
		ON(PWN.SERVICERDATAID=SD.SERVICERDATAID)
	LEFT JOIN &LIBNAME..ACCOUNT A
		ON(SD.ACCOUNTID=A.ACCOUNTID)
	WHERE CREDITUSER NOT IN(.)
;
QUIT;

PROC SQL;
	CREATE TABLE LIQUID AS	
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART
			  ,SUM(BALANCE_AT_ACQ) AS BALANCE_AT_ACQ
			  ,SUM(DOLL_COLLECTED) AS DOLL_COLLECTED
			  ,CALCULATED DOLL_COLLECTED/CALCULATED BALANCE_AT_ACQ AS LIQUIDATION_RATE
		FROM DOLL_COLLECTED
	GROUP BY 1,2,3
;
QUIT;

PROC SQL;
	CREATE TABLE CONTINGENCYFEE AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART
			  ,SUM(CONTINGENCYFEE) AS CONTINGENCYFEE
		FROM PAYMENTS_WITHOUT_NSF
	GROUP BY 1,2,3
;
QUIT;

PROC SQL;
	CREATE TABLE AVG_PAYMENT_COLLECTOR AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART
			  ,AVG(AMOUNT) AS AVG_PAYMENT_COLLECTOR
		FROM PAYMENTS_WITHOUT_NSF
	WHERE CREDITUSER ^= .
	GROUP BY 1,2,3
;
QUIT;

PROC SQL;
	CREATE TABLE AVG_PAYMENTS AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,DATEPART
			  ,AVG(AMOUNT) AS AVG_PAYMENTS_SIZE
		FROM PAYMENTS_WITHOUT_NSF
	GROUP BY 1,2,3
;
QUIT;

PROC SQL;
	CREATE TABLE PTP_INITIAL AS
		SELECT PTP.* 
			  ,DATEPART(PROM.DATEMADE) AS PROMISESETUP FORMAT=MMDDYY10.
			  ,PROM.PROMISEID
			  ,PROM.DISCOUNT
			  ,PROM.SETTLEMENTAMOUNT
			  ,PROM.EXPEDITEPAYMENTAMOUNT
			  ,PROM.MINIMUMPAYMENT
/*			  ,PROM.FIRSTREGULARPAYMENTDATE*/
/*			  ,PROM.NEXTPAYMENTDUEDATE*/
			  ,PF.DESCRIPTION AS PROMISE_FREQ_TYPE
			  ,DATEPART(PD.DATE) AS PROMISEDATE FORMAT=MMDDYY10.
			  ,INTNX('DAY',CALCULATED PROMISEDATE,3,'B') AS PROMISEDATEUPPAD FORMAT=MMDDYY10.
			  ,INTNX('DAY',CALCULATED PROMISEDATE,-3,'B') AS PROMISEDATEDOWNPAD FORMAT=MMDDYY10.
			  ,AMOUNT AS PROMISEAMOUNT
			  ,COMPLETED
		FROM PTP PTP
	LEFT JOIN &LIBNAME..PROMISE PROM
		ON(PTP.SERVICERDATAID=PROM.SERVICERDATAID AND
		   PTP.DATEPART=DATEPART(PROM.DATEMADE))
	LEFT JOIN &LIBNAME..PROMISEFREQUENCY PF
		ON(PROM.PROMISEFREQUENCYID=PF.PROMISEFREQUENCYID)
	LEFT JOIN &LIBNAME..POSTDATE PD
		ON(PROM.PROMISEID=PD.PROMISEID)
	WHERE PTP = 'Y' AND PF.DESCRIPTION ^= ''
	ORDER BY PTP.SERVICERDATAID
			,PROM.PROMISEID
			,CALCULATED PROMISEDATE
;
QUIT;

PROC SQL;
	CREATE TABLE PAYMENT_TO_PROMISE_MATCHING AS
		SELECT PRM.*
			  ,PMT.DATE
			  ,PMT.AMOUNT
			  ,CASE WHEN PMT.AMOUNT >= PRM.PROMISEAMOUNT THEN 'Y' ELSE 'N' END AS PROMISEKEPT
		FROM PTP_INITIAL PRM
	LEFT JOIN PAYMENTS_WITHOUT_NSF PMT
		ON(PRM.SERVICERDATAID=PMT.SERVICERDATAID AND
		   PMT.DATE BETWEEN PRM.PROMISEDATEDOWNPAD AND PRM.PROMISEDATEUPPAD)
;
QUIT;

/* PROMISES KEPT */
PROC SQL;
	CREATE TABLE PROMISES_KEPT_SUMMARY AS
		SELECT PORTFOLIO
			  ,PLACEMENTINBEAM
			  ,PROMISEDATE
			  ,SUM(CASE WHEN PROMISEKEPT = 'Y' THEN 1 ELSE 0 END) AS PROMISES_KEPT
		FROM PAYMENT_TO_PROMISE_MATCHING
	GROUP BY 1,2,3
;
QUIT;

PROC SQL;
	CREATE TABLE POST_DATES_DETAIL AS	
		SELECT PD.PROMISEID
			  ,A.PORTFOLIOOWNER AS PORTFOLIO
			  ,A.CCPLACEMENTINBEAM AS PLACEMENTINBEAM
			  ,P.SERVICERDATAID
			  ,SD.ACCOUNTID
			  ,DATEPART(PD.DATE) AS DATEPART
			  ,PD.AMOUNT
		FROM &LIBNAME..POSTDATE PD
	LEFT JOIN &LIBNAME..PROMISE P
		ON(PD.PROMISEID=P.PROMISEID)
	LEFT JOIN &LIBNAME..SERVICERDATA SD
		ON(P.SERVICERDATAID=SD.SERVICERDATAID)
	LEFT JOIN &LIBNAME..ACCOUNT A
		ON(SD.ACCOUNTID=A.ACCOUNTID)
	WHERE SD.ACCOUNTID ^= .
;
QUIT;

/* POST DATES */
PROC SQL;
	CREATE TABLE POST_DATES_SUMMARY AS
		SELECT PORTFOLIO	
			  ,PLACEMENTINBEAM
			  ,DATEPART FORMAT = MMDDYY10.
			  ,COUNT(*) AS NUMBER_OF_POSTS
		FROM POST_DATES_DETAIL
	GROUP BY 1,2,3
;
QUIT;

/* COLLECTOR LIQUIDATION: $COLLECTED/$OUTSTANDING. OUTSTANDING - AMOUNT WHEN ACCT WAS ORIGINALLY LOADED */


/* ADD METRICS TO UNIQUE DIMENSIONS */
PROC SQL;	
	CREATE TABLE DFR_1 AS
		SELECT U.PORTFOLIO
			  ,U.PLACEMENTINBEAM
			  ,U.DATE
			  ,COALESCE(T1.ACCOUNTS_WORKED,0) AS ACCOUNTS_WORKED
			  ,COALESCE(T1.TOTAL_DIALER_CALLS,0) AS TOTAL_DIALER_CALLS
			  ,COALESCE(T1.TOTAL_OUTBOUND_CALLS,0) AS TOTAL_OUTBOUND_CALLS
			  ,COALESCE(T2.PROMISES,0) AS PROMISES
			  ,COALESCE(T8.PROMISES_KEPT,0) AS PROMISES_KEPT
			  ,COALESCE(T4.RPCS,0) AS RPCS
			  ,COALESCE(T2.PROMISES/T4.RPCS,0) AS PROMISE_RATE FORMAT = PERCENT9.2
			  ,COALESCE(T3.CONNECT_RATE,0) AS CONNECT_RATE FORMAT = PERCENT9.2
			  ,COALESCE(T4.RPC_RATE,0) AS RPC_RATE FORMAT = PERCENT9.2
			  ,COALESCE(T5.AVG_PAYMENT_COLLECTOR,0) AS AVG_PAYMENT_COLLECTOR FORMAT = COMMA20.2
			  ,COALESCE(T6.AVG_PAYMENTS_SIZE,0) AS AVG_PAYMENTS_SIZE FORMAT = COMMA20.2
			  ,COALESCE(T7.NUMBER_OF_POSTS,0) AS NUMBER_OF_POSTS
			  ,COALESCE(T9.QUEUE_PENETRATION,0) AS QUEUE_PENETRATION FORMAT = PERCENT9.2
			  ,COALESCE(T10.QUEUE_SATURATION,0) AS QUEUE_SATURATION FORMAT = PERCENT9.2
			  ,COALESCE(T11.SIF_PIF,0) AS SIF_PIF
			  ,COALESCE(T12.CONTINGENCYFEE,0) AS CONTINGENCY_FEE_EARNED
			  ,COALESCE(T13.LIQUIDATION_RATE,0) AS COLLECTOR_LIQUIDATION
		FROM UNIQUE_DIMENSIONS U
	LEFT JOIN ACCOUNTS_CALLED_PER_DAY T1
		ON(U.PORTFOLIO=T1.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T1.PLACEMENTINBEAM AND
		   U.DATE=T1.DATE)
	LEFT JOIN PTP_BY_DAY T2
		ON(U.PORTFOLIO=T2.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T2.PLACEMENTINBEAM AND
		   U.DATE=T2.DATE)
	LEFT JOIN CONNECTS_BY_DAY T3
		ON(U.PORTFOLIO=T3.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T3.PLACEMENTINBEAM AND
		   U.DATE=T3.DATE)
	LEFT JOIN RPCS_BY_DAY T4
		ON(U.PORTFOLIO=T4.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T4.PLACEMENTINBEAM AND
		   U.DATE=T4.DATE)
	LEFT JOIN AVG_PAYMENT_COLLECTOR T5
		ON(U.PORTFOLIO=T5.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T5.PLACEMENTINBEAM AND
		   U.DATE=T5.DATEPART)
	LEFT JOIN AVG_PAYMENTS T6
		ON(U.PORTFOLIO=T6.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T6.PLACEMENTINBEAM AND
		   U.DATE=T6.DATEPART)
	LEFT JOIN POST_DATES_SUMMARY T7
		ON(U.PORTFOLIO=T7.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T7.PLACEMENTINBEAM AND
		   U.DATE=T7.DATEPART)
	LEFT JOIN PROMISES_KEPT_SUMMARY T8
		ON(U.PORTFOLIO=T8.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T8.PLACEMENTINBEAM AND
		   U.DATE=T8.PROMISEDATE)
	LEFT JOIN QUEUE_PENETRATION T9
		ON(U.PORTFOLIO=T9.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T9.PLACEMENTINBEAM AND
		   U.DATE=T9.DATEPART)
	LEFT JOIN QUEUE_SATURATION T10
		ON(U.PORTFOLIO=T10.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T10.PLACEMENTINBEAM AND
		   U.DATE=T10.DATEPART)
	LEFT JOIN SIF_PIF T11
		ON(U.PORTFOLIO=T11.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T11.PLACEMENTINBEAM AND
		   U.DATE=T11.DATE)
	LEFT JOIN CONTINGENCYFEE T12
		ON(U.PORTFOLIO=T12.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T12.PLACEMENTINBEAM AND
		   U.DATE=T12.DATEPART)
	LEFT JOIN LIQUID T13
		ON(U.PORTFOLIO=T13.PORTFOLIO AND
		   U.PLACEMENTINBEAM=T13.PLACEMENTINBEAM AND
		   U.DATE=T12.DATEPART)
	WHERE T1.ACCOUNTS_WORKED ^=.
;
QUIT;