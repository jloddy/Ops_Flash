/* DAILY FLASH REPORT
METRICS:
1) Accounts Worked - DONE
2) Promises - DONE
3) Promise Kept%
4) Dollars Collected by Agent Average
5) Average Payment Size
6) Collector liquidation
7) Post Dates
8) SIF/PIF
9) Total Outbound Calls - DONE
10) Total Dialer Calls - DONE
11) Connect Rate - DONE
12) RPC Rate - DONE
13) Promise Rate - DONE
14) Queue Penetration
15) Queue Saturation
16) DPMO Failed QA
17) Contingency Fee Earned
18) Owned Portfolio Liquidation Pct
*/

%LET LIBNAME = SRC;

%MACRO LIBNAME(NAME=);

%IF "&SYSUSERID" = "cna0" %THEN %DO;
	LIBNAME &NAME '/u01/app/cu/prd/sas/archive/Risk/Data/Cochran/Ad-Hoc/SAS Files/';
%END;

%ELSE %DO;
	LIBNAME &NAME ODBC  
		DSN='BEAM_64' 
		SCHEMA=dbo 
		USER="emergentuser"
		PASSWORD="s8vAqlD1THEXQAl3T9mIyk6pJVa7kouMIiPygn3o+5I=";
%END;
%MEND;

%LIBNAME(NAME=&LIBNAME)

DATA DATE_SOURCE;
START_DT = '01JAN2016'D;
INCREMENT = 0;
	DO I = START_DT TO TODAY()-1;
		DATE = INTNX('DAY',START_DT,INCREMENT,'B');
		INCREMENT = INCREMENT+1;
		OUTPUT;
	END;

	FORMAT DATE MMDDYY10.;
	KEEP DATE;
RUN;

PROC SQL;
	CREATE TABLE PORTFOLIO_GROUPS AS
		SELECT DISTINCT PORTFOLIOOWNER
		FROM &LIBNAME..ACCOUNT
;
QUIT;

DATA BLANK_APPEND;
	LENGTH PORTFOLIOOWNER $100.;
	PORTFOLIOOWNER = '';
RUN;

PROC APPEND BASE=PORTFOLIO_GROUPS DATA=BLANK_APPEND;
RUN;

PROC SQL;
	CREATE TABLE UNIQUE_DIMENSIONS AS
		SELECT DISTINCT P.PORTFOLIOOWNER AS PORTFOLIO
			  ,D.DATE
		FROM PORTFOLIO_GROUPS P
	CROSS JOIN DATE_SOURCE D
	ORDER BY 2,1
;
QUIT;
			  
PROC SQL;
	CREATE TABLE ACCTS_WORKED AS
		SELECT CN.*
			  ,CPR.DESCRIPTION AS PRI_DESC
			  ,CSR.DESCRIPTION AS SEC_DESC
			  ,SD.ACCOUNTID
		FROM &LIBNAME..CALLNOTE CN
	LEFT JOIN &LIBNAME..CALLPRIMARYRESULT CPR
		ON(CN.PRIMARYRESULTID=CPR.CALLPRIMARYRESULTID)
	LEFT JOIN &LIBNAME..CALLSECONDARYRESULT CSR
		ON(CN.SECONDARYRESULTID=CSR.CALLSECONDARYRESULTID)
	LEFT JOIN &LIBNAME..SERVICERDATA SD
		ON(CN.SERVICERDATAID=SD.SERVICERDATAID)
;
QUIT;

PROC SQL;
	CREATE TABLE OUTBOUND_DIALER_CALLS AS
		SELECT CN.*
			  ,A.PORTFOLIOOWNER AS PORTFOLIO
			  ,DATEPART(DATE) AS DATEPART FORMAT = MMDDYY10.
		FROM ACCTS_WORKED CN
	LEFT JOIN &LIBNAME..ACCOUNT A
		ON(CN.ACCOUNTID=A.ACCOUNTID)
	WHERE PRIMARYRESULTID NOT IN(1,4,14,15,16,17,18,19,20,21,22,23)
;
QUIT;

/* PTP */
PROC SQL;
	CREATE TABLE PTP AS
		SELECT *
			  ,CASE WHEN SECONDARYRESULTID = 8 THEN "Y" ELSE "N" END AS PTP
		FROM OUTBOUND_DIALER_CALLS
;
QUIT;

PROC SQL;
	CREATE TABLE PTP_BY_DAY AS
		SELECT PORTFOLIO
			  ,DATEPART AS DATE
			  ,SUM(CASE WHEN PTP = "Y" THEN 1 ELSE 0 END) AS PROMISES
			  ,COUNT(*) AS TOTAL_ACCTS_WORKED
			  ,CALCULATED PROMISES/CALCULATED TOTAL_ACCTS_WORKED AS PROMISE_RATE
		FROM PTP
	GROUP BY 1,2
;
QUIT;

/* OUTBOUND DIALER METRICS */
PROC SQL;
	CREATE TABLE ACCOUNTS_CALLED_PER_DAY AS
		SELECT PORTFOLIO
			  ,DATEPART AS DATE
			  ,COUNT(DISTINCT ACCOUNTID) AS ACCOUNTS_WORKED
			  ,COUNT(*) AS TOTAL_DIALER_CALLS
			  ,COUNT(*) AS TOTAL_OUTBOUND_CALLS
		FROM OUTBOUND_DIALER_CALLS
	GROUP BY 1,2;
QUIT;

/* 2, 3, 6, 11 ARE NOT CONNECTS */
PROC SQL;
	CREATE TABLE CONNECT_RATE AS
		SELECT *
			  ,CASE WHEN PRIMARYRESULTID NOT IN(2,3,6,11) THEN "Y" ELSE "N" END AS CONNECT
		FROM OUTBOUND_DIALER_CALLS
;
QUIT;

PROC SQL;
	CREATE TABLE CONNECTS_BY_DAY AS
		SELECT PORTFOLIO
			  ,DATEPART AS DATE
			  ,SUM(CASE WHEN CONNECT = "Y" THEN 1 ELSE 0 END) AS CONNECTS
			  ,COUNT(*) AS TOTAL_OUTBOUND_CALLS
			  ,CALCULATED CONNECTS/CALCULATED TOTAL_OUTBOUND_CALLS AS CONNECT_RATE
		FROM CONNECT_RATE
	GROUP BY 1,2
;
QUIT;

PROC SQL;
	CREATE TABLE RPC_RATE AS
		SELECT *
			  ,CASE WHEN PRIMARYRESULTID IN(7,9) THEN "Y" ELSE "N" END AS RPC
		FROM OUTBOUND_DIALER_CALLS
;
QUIT;

PROC SQL;
	CREATE TABLE RPCS_BY_DAY AS
		SELECT PORTFOLIO
			  ,DATEPART AS DATE
			  ,SUM(CASE WHEN RPC = "Y" THEN 1 ELSE 0 END) AS RPCS
			  ,COUNT(*) AS TOTAL_OUTBOUND_CALLS
			  ,CALCULATED RPCS/CALCULATED TOTAL_OUTBOUND_CALLS AS RPC_RATE
		FROM RPC_RATE
	GROUP BY 1,2
;
QUIT;

/* PAYMENTS */
PROC SQL;
	CREATE TABLE PAYMENTS AS
		SELECT SERVICERDATAID
			  ,DATE
			  ,AMOUNT
			  ,PH.PAYMENTHISTORYTYPEID
			  ,ISPAYMENT
			  ,TEXT
		FROM &LIBNAME..PAYMENTHISTORY PH
	LEFT JOIN &LIBNAME..PAYMENTHISTORYTYPE PHT
		ON(PH.PAYMENTHISTORYTYPEID=PHT.PAYMENTHISTORYTYPEID)
	WHERE ISPAYMENT = 1
	ORDER BY SERVICERDATAID
;
QUIT;

/* NSF PAYMENTS TO BE REVERSED */
PROC SQL; 
	CREATE TABLE NSF AS
		SELECT SERVICERDATAID
			  ,DATE
			  ,AMOUNT
			  ,ISPAYMENT
			  ,NSFPAYMENTHISTORYID
		FROM &LIBNAME..PAYMENTHISTORY PH
	WHERE PH.NSFPAYMENTHISTORYID ^= .
		  AND PH.ISPAYMENT = 1
;
QUIT;

PROC SQL;
	CREATE TABLE PAYMENTS_WITHOUT_NSF AS
		SELECT PH.SERVICERDATAID
			  ,PH.PAYMENTHISTORYID
			  ,PH.NSFPAYMENTHISTORYID
			  ,PH.DATE
			  ,PH.AMOUNT
			  ,PH.ISPAYMENT
		FROM &LIBNAME..PAYMENTHISTORY PH
	LEFT JOIN NSF NSF
		ON(PH.PAYMENTHISTORYID=NSF.NSFPAYMENTHISTORYID)
	WHERE PH.NSFPAYMENTHISTORYID = . AND 
		  NSF.NSFPAYMENTHISTORYID = . AND
		  PH.ISPAYMENT = 1
;
QUIT;

/* ADD METRICS TO UNIQUE DIMENSIONS */
PROC SQL;	
	CREATE TABLE DFR_1 AS
		SELECT U.PORTFOLIO
			  ,U.DATE
			  ,T1.ACCOUNTS_WORKED
			  ,T1.TOTAL_DIALER_CALLS
			  ,T1.TOTAL_OUTBOUND_CALLS
			  ,T2.PROMISES
			  ,T2.PROMISE_RATE FORMAT = PERCENT9.2
			  ,T3.CONNECT_RATE FORMAT = PERCENT9.2
			  ,T4.RPC_RATE FORMAT = PERCENT9.2
		FROM UNIQUE_DIMENSIONS U
	LEFT JOIN ACCOUNTS_CALLED_PER_DAY T1
		ON(U.PORTFOLIO=T1.PORTFOLIO AND
		   U.DATE=T1.DATE)
	LEFT JOIN PTP_BY_DAY T2
		ON(U.PORTFOLIO=T2.PORTFOLIO AND
		   U.DATE=T2.DATE)
	LEFT JOIN CONNECTS_BY_DAY T3
		ON(U.PORTFOLIO=T3.PORTFOLIO AND
		   U.DATE=T3.DATE)
	LEFT JOIN RPCS_BY_DAY T4
		ON(U.PORTFOLIO=T4.PORTFOLIO AND
		   U.DATE=T4.DATE)
;
QUIT;